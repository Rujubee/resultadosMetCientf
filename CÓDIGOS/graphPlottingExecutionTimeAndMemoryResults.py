# -*- coding: utf-8 -*-
"""ExecutionTimeAndMemoryResults.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1l8Ro3v__LufxCscxwbutHnkrRMcC-jy7
"""

# libraries
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

### CONJUNTOS ESPARSOS: TEMPO DE EXECUÇÃO

              # 35     # 580   # 1200    # 10K   # 100K    # 1KK    # 8KK
y1_values = [0.00000, 0.00100, 0.00399, 0.04588, 0.63930, 8.27562, 82.14722] # TimSort
y2_values = [0.00000, 0.02593, 0.11719, 8.53345, 877.46948, 977.46948, 1077.46948] # BubbleSort
y3_values = [0.00099, 0.01097, 0.04738, 3.34610, 344.30601, 444.30601, 544.30601] # SelectionSort
y4_values = [0.00099, 0.01496, 0.05884, 4.21679, 443.95488, 543.95488, 643.95488] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# Line Plots: Execution Time
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("Tempo de Execução")
plt.title("Tempo de Execução Gasto")
plt.xticks(tam_x, x_values)
# show graph
plt.show()

### CONJUNTOS ESPARSOS: % DE MEMÓRIA

              # 35     # 580   # 1200    # 10K   # 100K    # 1KK    # 8KK
y1_values = [47.2, 47.2, 47.2, 47.2, 47.2, 47.4, 49.3] # TimSort
y2_values = [49.0, 49.0, 49.0, 49.4, 42.3, 47.7, 47.7] # BubbleSort
y3_values = [41.1, 41.5, 41.0, 41.0, 41.4, 41.2, 41.1] # SelectionSort
y4_values = [41.5, 41.5, 41.5, 41.4, 36.8, 40.5, 40.5] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# Line Plots: Time Complexity
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("% de memória")
plt.title("Consumo de Memória")
plt.xticks(tam_x, x_values)
# show graph
plt.show()





### CONJUNTOS ORD. ASC.

              # 35     # 580   # 1200    # 10K   # 100K    # 1KK    # 8KK
y1_values = [0.00000, 0.00100, 0.00299, 0.02693, 0.36404, 4.60725, 43.86189] # TimSort
y2_values = [0.00000, 0.01296, 0.05992, 4.40928, 445.21163, 545.21163, 645.21163] # BubbleSort
y3_values = [0.00000, 0.00997, 0.04538, 3.25784, 327.51647, 427.51647, 527.51647] # SelectionSort
y4_values = [0.00000, 0.00000, 0.00000, 0.00100, 0.01795, 0.18102, 1.54290] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# multiple line plots
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("Tempo de Execução")
plt.title("Tempo de Execução Gasto")
plt.xticks(tam_x, x_values)
# show graph
plt.show()

### CONJUNTOS ORD. ASC.: % DE MEMÓRIA

            #35 #580 #200 #10K #100K #1KK #8KK
y1_values = [36.3, 36.4, 36.3, 36.3, 36.3, 36.6, 38.4] # TimSort
y2_values = [38.9, 38.8, 38.8, 38.9, 38.8, 38.8, 38.8] # BubbleSort
y3_values = [36.7, 36.7, 36.7, 36.7, 40.9, 37.5, 37.5] # SelectionSort
y4_values = [37.1, 37.1, 37.1, 37.1, 37.2, 37.4, 39.3] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# Line Plots: Time Complexity
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("% de memória")
plt.title("Consumo de Memória")
plt.xticks(tam_x, x_values)
# show graph
plt.show()





### CONJUNTOS ORD. DESC.

              # 35     # 580   # 1200    # 10K   # 100K    # 1KK    # 8KK
y1_values = [0.00000, 0.00199, 0.00499, 0.05386, 0.72458, 8.90534, 78.76533] # TimSort
y2_values = [0.00000, 0.03690, 0.17005, 12.55168, 1339.02929, 2339.02929, 3339.02929] # BubbleSort
y3_values = [0.00000, 0.01247, 0.04887, 3.59545, 394.72673, 494.72673, 594.72673] # SelectionSort
y4_values = [0.00000, 0.02593, 0.11868, 9.28793, 915.94439, 1091.94439, 2091.94439] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# multiple line plots
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("Tempo de Execução")
plt.title("Tempo de Execução Gasto")
plt.xticks(tam_x, x_values)
# show graph
plt.show()

### CONJUNTOS ORD. DESC.: % DE MEMÓRIA

            #35 #580 #200 #10K #100K #1KK #8KK
y1_values = [36.6, 36.6, 36.5, 40.8, 40.0, 40.2, 42.9] # TimSort
y2_values = [42.7, 42.7, 42.7, 42.8, 38.1, 41.8, 41.8] # BubbleSort
y3_values = [41.0, 40.6, 40.6, 40.6, 41.4, 40.8, 40.8] # SelectionSort
y4_values = [41.5, 41.5, 41.4, 41.4, 38.1, 40.7, 40.7] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# Line Plots: Time Complexity
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("% de memória")
plt.title("Consumo de Memória")
plt.xticks(tam_x, x_values)
# show graph
plt.show()





### CONJUNTOS IDENTICOS

              # 35     # 580   # 1200    # 10K   # 100K    # 1KK    # 8KK
y1_values = [0.00000, 0.00100, 0.00199, 0.02793, 0.36504, 4.61324, 44.01749] # TimSort
y2_values = [0.00000, 0.01296, 0.05935, 4.38586, 445.84862, 545.84862, 645.84862] # BubbleSort
y3_values = [0.00000, 0.01097, 0.04787, 3.38700, 338.84547, 438.84547, 538.84547] # SelectionSort
y4_values = [0.00000, 0.00000, 0.00100, 0.00199, 0.02094, 0.20146, 1.72753] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# multiple line plots
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("Tempo de Execução")
plt.title("Tempo de Execução Gasto")
plt.xticks(tam_x, x_values)
# show graph
plt.show()

### CONJUNTOS IDENTICOS: % DE MEMÓRIA

            #35 #580 #200 #10K #100K #1KK #8KK
y1_values = [37.6, 37.5, 37.5, 37.5, 37.6, 37.8, 39.6] # TimSort
y2_values = [40.2, 40.0, 40.0, 40.6, 41.2, 40.4, 40.4] # BubbleSort
y3_values = [38.5, 38.7, 38.6, 38.6, 41.0, 39.0, 39.0] # SelectionSort
y4_values = [39.2, 39.1, 39.1, 39.1, 39.4, 39.4, 41.3] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# Line Plots: Time Complexity
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("% de memória")
plt.title("Consumo de Memória")
plt.xticks(tam_x, x_values)
# show graph
plt.show()





### CONJUNTOS COM MUITOS NÚMEROS REPETIDOS

              # 35     # 580   # 1200    # 10K   # 100K    # 1KK    # 8KK
y1_values = [0.00000, 0.00199, 0.00399, 0.04488, 0.59392, 7.58284, 69.86687] # TimSort
y2_values = [0.00000, 0.02394, 0.11569, 8.16030, 893.05470, 993.05470, 1093.05470] # BubbleSort
y3_values = [0.00000, 0.01097, 0.04787, 3.44830, 372.44769, 472.44769, 572.44769] # SelectionSort
y4_values = [0.00000, 0.01296, 0.05884, 4.55936, 458.19039, 558.19039, 658.19039] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# multiple line plots
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("Tempo de Execução")
plt.title("Tempo de Execução Gasto")
plt.xticks(tam_x, x_values)
# show graph
plt.show()

### CONJUNTOS IDENTICOS: % DE MEMÓRIA

            #35 #580 #200 #10K #100K #1KK #8KK
y1_values = [53.2, 53.4, 53.4, 53.1, 53.0, 53.1, 54.0] # TimSort
y2_values = [52.8, 52.8, 52.7, 52.7, 50.9, 52.3, 52.3] # BubbleSort
y3_values = [53.7, 53.7, 53.4, 53.4, 54.3, 53.7, 53.6] # SelectionSort
y4_values = [54.6, 54.6, 54.7, 54.6, 51.2, 53.9, 53.9] # InsertionSort

x_values = ['35', '580', '1200', '10000', '100000', '1000000', '8000000']
tam_x = range(len(x_values))

# Line Plots: Time Complexity
plt.plot(x_values, y1_values, marker='o', markerfacecolor='blue', markersize=7, color='skyblue', linewidth=2.5, label="TimSort")
plt.plot(x_values, y2_values, marker='o', markerfacecolor='purple', markersize=7, color='#b02eae', linewidth=2.5, label="BubbleSort")
plt.plot(x_values, y3_values, marker='o', markerfacecolor='green', markersize=7, color='#90a82f', linewidth=2.5, label="SelectionSort")
plt.plot(x_values, y4_values, marker='o', markerfacecolor='red', markersize=7, color='#fa2335', linewidth=2.5, label="InsertionSort")

# show legend
plt.legend()
plt.xlabel("Tamanho da entrada")
plt.ylabel("% de memória")
plt.title("Consumo de Memória")
plt.xticks(tam_x, x_values)
# show graph
plt.show()